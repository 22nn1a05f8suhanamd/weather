<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <style>
    /* Global Styles */
    body {
        font-family: 'Arial', sans-serif;
        background: linear-gradient(to right, #fbc2eb, #a6c1ee); /* Soft pink to light blue gradient */
        height: 100vh;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .container {
        max-width: 400px;
        text-align: center;
        background-color: rgba(255, 255, 255, 0.9); /* Light transparent white background */
        border-radius: 15px;
        padding: 30px 20px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    h1 {
        font-size: 36px;
        color: #333;
        margin-bottom: 20px;
        font-weight: bold;
        text-transform: uppercase;
    }

    /* Input and Button Styles */
    input[type="text"] {
        width: 80%;
        padding: 12px;
        margin: 15px 0;
        border: none;
        border-radius: 25px;
        font-size: 16px;
        box-sizing: border-box;
        transition: 0.3s;
    }

    input[type="text"]:focus {
        outline: none;
        box-shadow: 0 0 8px rgba(0, 114, 255, 0.7);
    }

    button {
        padding: 12px 25px;
        background-color: #0072ff;
        color: white;
        border: none;
        border-radius: 25px;
        font-size: 18px;
        cursor: pointer;
        transition: 0.3s;
        margin-top: 15px;
    }

    button:hover {
        background-color: #005bb5;
        transform: translateY(-2px);
    }

    /* Weather Info Styling */
    .weather-info {
        margin-top: 20px;
        color: #333;
    }

    #location {
        font-size: 28px;
        font-weight: bold;
        color: #0072ff;
    }

    #temperature {
        font-size: 24px;
        margin-top: 10px;
        color: #ff5733;
        font-weight: bold;
    }

    #description {
        font-size: 20px;
        color: #555;
        margin-top: 10px;
    }

    /* Animations for weather info */
    .weather-info h2, .weather-info p {
        opacity: 0;
        animation: fadeIn 1.5s forwards;
    }

    .weather-info h2 {
        animation-delay: 0.5s;
    }

    .weather-info p {
        animation-delay: 1s;
    }

    @keyframes fadeIn {
        to {
            opacity: 1;
        }
    }

    /* Small screen responsiveness */
    @media (max-width: 600px) {
        .container {
            width: 90%;
            padding: 20px;
        }

        h1 {
            font-size: 30px;
        }

        input[type="text"] {
            width: 100%;
            padding: 10px;
        }

        button {
            width: 100%;
            font-size: 16px;
        }
    }
</style>

</head>
<body>
    <div class="container">
        <h1>Weather App</h1>
        <input type="text" id="locationInput" placeholder="Enter a city">
        <button id="searchButton">Search</button>
        <div class="weather-info">
            <h2 id="location"></h2>
            <p id="temperature"></p>
            <p id="description"></p>
        </div>
    </div>

    <script>
        const apiKey = '9880690d0b87b1b0c6863c31a729d9b6';  
        const apiUrl = 'https://api.openweathermap.org/data/2.5/weather';

        const locationInput = document.getElementById('locationInput');
        const searchButton = document.getElementById('searchButton');
        const locationElement = document.getElementById('location');
        const temperatureElement = document.getElementById('temperature');
        const descriptionElement = document.getElementById('description');

        searchButton.addEventListener('click', () => {
            const location = locationInput.value;
            if (location) {
                fetchWeather(location);
            }
        });

        function fetchWeather(location) {
            const url = `${apiUrl}?q=${location}&appid=${apiKey}&units=metric`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    if (data.cod !== 200) {
                        alert('City not found. Please try again.');
                        return;
                    }
                    locationElement.textContent = data.name;
                    temperatureElement.textContent = `${Math.round(data.main.temp)}Â°C`;
                    descriptionElement.textContent = data.weather[0].description;
                })
                .catch(error => {
                    console.error('Error fetching weather data:', error);
                });
        }
    </script>
</body>
</html>
